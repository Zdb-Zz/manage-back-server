package com.zdb.demo.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class LiuyanExample {

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table liuyan
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table liuyan
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table liuyan
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table liuyan
     *
     * @mbggenerated
     */
    protected Integer limitStart;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table liuyan
     *
     * @mbggenerated
     */
    protected Integer limitEnd;

    /**
     *  构造查询条件,liuyan
     */
    public LiuyanExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     *  设置排序字段,liuyan
     *
     * @param orderByClause 排序字段
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     *  获取排序字段,liuyan
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     *  设置过滤重复数据,liuyan
     *
     * @param distinct 是否过滤重复数据
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     *  是否过滤重复数据,liuyan
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     *  获取当前的查询条件实例,liuyan
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * ,liuyan
     *
     * @param criteria 过滤条件实例
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * ,liuyan
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     *  创建一个查询条件,liuyan
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     *  内部构建查询条件对象,liuyan
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     *  清除查询条件,liuyan
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * ,liuyan
     *
     * @param limitStart
     */
    public void setLimitStart(Integer limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * ,liuyan
     */
    public Integer getLimitStart() {
        return limitStart;
    }

    /**
     * ,liuyan
     *
     * @param limitEnd
     */
    public void setLimitEnd(Integer limitEnd) {
        this.limitEnd=limitEnd;
    }

    /**
     * ,liuyan
     */
    public Integer getLimitEnd() {
        return limitEnd;
    }

    /**
     * 
     * GeneratedCriteria
     * 数据库表：liuyan
     */
    protected abstract static class GeneratedCriteria {

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andLyIdIsNull() {
            addCriterion("ly_id is null");
            return (Criteria) this;
        }

        public Criteria andLyIdIsNotNull() {
            addCriterion("ly_id is not null");
            return (Criteria) this;
        }

        public Criteria andLyIdEqualTo(Integer value) {
            addCriterion("ly_id =", value, "lyId");
            return (Criteria) this;
        }

        public Criteria andLyIdNotEqualTo(Integer value) {
            addCriterion("ly_id <>", value, "lyId");
            return (Criteria) this;
        }

        public Criteria andLyIdGreaterThan(Integer value) {
            addCriterion("ly_id >", value, "lyId");
            return (Criteria) this;
        }

        public Criteria andLyIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("ly_id >=", value, "lyId");
            return (Criteria) this;
        }

        public Criteria andLyIdLessThan(Integer value) {
            addCriterion("ly_id <", value, "lyId");
            return (Criteria) this;
        }

        public Criteria andLyIdLessThanOrEqualTo(Integer value) {
            addCriterion("ly_id <=", value, "lyId");
            return (Criteria) this;
        }

        public Criteria andLyIdIn(List<Integer> values) {
            addCriterion("ly_id in", values, "lyId");
            return (Criteria) this;
        }

        public Criteria andLyIdNotIn(List<Integer> values) {
            addCriterion("ly_id not in", values, "lyId");
            return (Criteria) this;
        }

        public Criteria andLyIdBetween(Integer value1, Integer value2) {
            addCriterion("ly_id between", value1, value2, "lyId");
            return (Criteria) this;
        }

        public Criteria andLyIdNotBetween(Integer value1, Integer value2) {
            addCriterion("ly_id not between", value1, value2, "lyId");
            return (Criteria) this;
        }

        public Criteria andLyNameIsNull() {
            addCriterion("ly_name is null");
            return (Criteria) this;
        }

        public Criteria andLyNameIsNotNull() {
            addCriterion("ly_name is not null");
            return (Criteria) this;
        }

        public Criteria andLyNameEqualTo(String value) {
            addCriterion("ly_name =", value, "lyName");
            return (Criteria) this;
        }

        public Criteria andLyNameNotEqualTo(String value) {
            addCriterion("ly_name <>", value, "lyName");
            return (Criteria) this;
        }

        public Criteria andLyNameGreaterThan(String value) {
            addCriterion("ly_name >", value, "lyName");
            return (Criteria) this;
        }

        public Criteria andLyNameGreaterThanOrEqualTo(String value) {
            addCriterion("ly_name >=", value, "lyName");
            return (Criteria) this;
        }

        public Criteria andLyNameLessThan(String value) {
            addCriterion("ly_name <", value, "lyName");
            return (Criteria) this;
        }

        public Criteria andLyNameLessThanOrEqualTo(String value) {
            addCriterion("ly_name <=", value, "lyName");
            return (Criteria) this;
        }

        public Criteria andLyNameLike(String value) {
            addCriterion("ly_name like", value, "lyName");
            return (Criteria) this;
        }

        public Criteria andLyNameNotLike(String value) {
            addCriterion("ly_name not like", value, "lyName");
            return (Criteria) this;
        }

        public Criteria andLyNameIn(List<String> values) {
            addCriterion("ly_name in", values, "lyName");
            return (Criteria) this;
        }

        public Criteria andLyNameNotIn(List<String> values) {
            addCriterion("ly_name not in", values, "lyName");
            return (Criteria) this;
        }

        public Criteria andLyNameBetween(String value1, String value2) {
            addCriterion("ly_name between", value1, value2, "lyName");
            return (Criteria) this;
        }

        public Criteria andLyNameNotBetween(String value1, String value2) {
            addCriterion("ly_name not between", value1, value2, "lyName");
            return (Criteria) this;
        }

        public Criteria andLyDateIsNull() {
            addCriterion("ly_date is null");
            return (Criteria) this;
        }

        public Criteria andLyDateIsNotNull() {
            addCriterion("ly_date is not null");
            return (Criteria) this;
        }

        public Criteria andLyDateEqualTo(Date value) {
            addCriterionForJDBCDate("ly_date =", value, "lyDate");
            return (Criteria) this;
        }

        public Criteria andLyDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("ly_date <>", value, "lyDate");
            return (Criteria) this;
        }

        public Criteria andLyDateGreaterThan(Date value) {
            addCriterionForJDBCDate("ly_date >", value, "lyDate");
            return (Criteria) this;
        }

        public Criteria andLyDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ly_date >=", value, "lyDate");
            return (Criteria) this;
        }

        public Criteria andLyDateLessThan(Date value) {
            addCriterionForJDBCDate("ly_date <", value, "lyDate");
            return (Criteria) this;
        }

        public Criteria andLyDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ly_date <=", value, "lyDate");
            return (Criteria) this;
        }

        public Criteria andLyDateIn(List<Date> values) {
            addCriterionForJDBCDate("ly_date in", values, "lyDate");
            return (Criteria) this;
        }

        public Criteria andLyDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("ly_date not in", values, "lyDate");
            return (Criteria) this;
        }

        public Criteria andLyDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ly_date between", value1, value2, "lyDate");
            return (Criteria) this;
        }

        public Criteria andLyDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ly_date not between", value1, value2, "lyDate");
            return (Criteria) this;
        }

        public Criteria andLyContentIsNull() {
            addCriterion("ly_content is null");
            return (Criteria) this;
        }

        public Criteria andLyContentIsNotNull() {
            addCriterion("ly_content is not null");
            return (Criteria) this;
        }

        public Criteria andLyContentEqualTo(String value) {
            addCriterion("ly_content =", value, "lyContent");
            return (Criteria) this;
        }

        public Criteria andLyContentNotEqualTo(String value) {
            addCriterion("ly_content <>", value, "lyContent");
            return (Criteria) this;
        }

        public Criteria andLyContentGreaterThan(String value) {
            addCriterion("ly_content >", value, "lyContent");
            return (Criteria) this;
        }

        public Criteria andLyContentGreaterThanOrEqualTo(String value) {
            addCriterion("ly_content >=", value, "lyContent");
            return (Criteria) this;
        }

        public Criteria andLyContentLessThan(String value) {
            addCriterion("ly_content <", value, "lyContent");
            return (Criteria) this;
        }

        public Criteria andLyContentLessThanOrEqualTo(String value) {
            addCriterion("ly_content <=", value, "lyContent");
            return (Criteria) this;
        }

        public Criteria andLyContentLike(String value) {
            addCriterion("ly_content like", value, "lyContent");
            return (Criteria) this;
        }

        public Criteria andLyContentNotLike(String value) {
            addCriterion("ly_content not like", value, "lyContent");
            return (Criteria) this;
        }

        public Criteria andLyContentIn(List<String> values) {
            addCriterion("ly_content in", values, "lyContent");
            return (Criteria) this;
        }

        public Criteria andLyContentNotIn(List<String> values) {
            addCriterion("ly_content not in", values, "lyContent");
            return (Criteria) this;
        }

        public Criteria andLyContentBetween(String value1, String value2) {
            addCriterion("ly_content between", value1, value2, "lyContent");
            return (Criteria) this;
        }

        public Criteria andLyContentNotBetween(String value1, String value2) {
            addCriterion("ly_content not between", value1, value2, "lyContent");
            return (Criteria) this;
        }

        public Criteria andLyForNameIsNull() {
            addCriterion("ly_for_name is null");
            return (Criteria) this;
        }

        public Criteria andLyForNameIsNotNull() {
            addCriterion("ly_for_name is not null");
            return (Criteria) this;
        }

        public Criteria andLyForNameEqualTo(String value) {
            addCriterion("ly_for_name =", value, "lyForName");
            return (Criteria) this;
        }

        public Criteria andLyForNameNotEqualTo(String value) {
            addCriterion("ly_for_name <>", value, "lyForName");
            return (Criteria) this;
        }

        public Criteria andLyForNameGreaterThan(String value) {
            addCriterion("ly_for_name >", value, "lyForName");
            return (Criteria) this;
        }

        public Criteria andLyForNameGreaterThanOrEqualTo(String value) {
            addCriterion("ly_for_name >=", value, "lyForName");
            return (Criteria) this;
        }

        public Criteria andLyForNameLessThan(String value) {
            addCriterion("ly_for_name <", value, "lyForName");
            return (Criteria) this;
        }

        public Criteria andLyForNameLessThanOrEqualTo(String value) {
            addCriterion("ly_for_name <=", value, "lyForName");
            return (Criteria) this;
        }

        public Criteria andLyForNameLike(String value) {
            addCriterion("ly_for_name like", value, "lyForName");
            return (Criteria) this;
        }

        public Criteria andLyForNameNotLike(String value) {
            addCriterion("ly_for_name not like", value, "lyForName");
            return (Criteria) this;
        }

        public Criteria andLyForNameIn(List<String> values) {
            addCriterion("ly_for_name in", values, "lyForName");
            return (Criteria) this;
        }

        public Criteria andLyForNameNotIn(List<String> values) {
            addCriterion("ly_for_name not in", values, "lyForName");
            return (Criteria) this;
        }

        public Criteria andLyForNameBetween(String value1, String value2) {
            addCriterion("ly_for_name between", value1, value2, "lyForName");
            return (Criteria) this;
        }

        public Criteria andLyForNameNotBetween(String value1, String value2) {
            addCriterion("ly_for_name not between", value1, value2, "lyForName");
            return (Criteria) this;
        }
    }

    /**
     * 类注释
     * Criteria
     * 数据库表：liuyan
     */
    public static class Criteria extends GeneratedCriteria {


        protected Criteria() {
            super();
        }
    }

    /**
     * 
     * Criterion
     * 数据库表：liuyan
     */
    public static class Criterion {

        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}