package com.zdb.demo.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ReplyExample {

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table reply
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table reply
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table reply
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table reply
     *
     * @mbggenerated
     */
    protected Integer limitStart;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table reply
     *
     * @mbggenerated
     */
    protected Integer limitEnd;

    /**
     *  构造查询条件,reply
     */
    public ReplyExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     *  设置排序字段,reply
     *
     * @param orderByClause 排序字段
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     *  获取排序字段,reply
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     *  设置过滤重复数据,reply
     *
     * @param distinct 是否过滤重复数据
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     *  是否过滤重复数据,reply
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     *  获取当前的查询条件实例,reply
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * ,reply
     *
     * @param criteria 过滤条件实例
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * ,reply
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     *  创建一个查询条件,reply
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     *  内部构建查询条件对象,reply
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     *  清除查询条件,reply
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * ,reply
     *
     * @param limitStart
     */
    public void setLimitStart(Integer limitStart) {
        this.limitStart=limitStart;
    }

    /**
     * ,reply
     */
    public Integer getLimitStart() {
        return limitStart;
    }

    /**
     * ,reply
     *
     * @param limitEnd
     */
    public void setLimitEnd(Integer limitEnd) {
        this.limitEnd=limitEnd;
    }

    /**
     * ,reply
     */
    public Integer getLimitEnd() {
        return limitEnd;
    }

    /**
     * 
     * GeneratedCriteria
     * 数据库表：reply
     */
    protected abstract static class GeneratedCriteria {

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLrIdIsNull() {
            addCriterion("lr_id is null");
            return (Criteria) this;
        }

        public Criteria andLrIdIsNotNull() {
            addCriterion("lr_id is not null");
            return (Criteria) this;
        }

        public Criteria andLrIdEqualTo(Integer value) {
            addCriterion("lr_id =", value, "lrId");
            return (Criteria) this;
        }

        public Criteria andLrIdNotEqualTo(Integer value) {
            addCriterion("lr_id <>", value, "lrId");
            return (Criteria) this;
        }

        public Criteria andLrIdGreaterThan(Integer value) {
            addCriterion("lr_id >", value, "lrId");
            return (Criteria) this;
        }

        public Criteria andLrIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("lr_id >=", value, "lrId");
            return (Criteria) this;
        }

        public Criteria andLrIdLessThan(Integer value) {
            addCriterion("lr_id <", value, "lrId");
            return (Criteria) this;
        }

        public Criteria andLrIdLessThanOrEqualTo(Integer value) {
            addCriterion("lr_id <=", value, "lrId");
            return (Criteria) this;
        }

        public Criteria andLrIdIn(List<Integer> values) {
            addCriterion("lr_id in", values, "lrId");
            return (Criteria) this;
        }

        public Criteria andLrIdNotIn(List<Integer> values) {
            addCriterion("lr_id not in", values, "lrId");
            return (Criteria) this;
        }

        public Criteria andLrIdBetween(Integer value1, Integer value2) {
            addCriterion("lr_id between", value1, value2, "lrId");
            return (Criteria) this;
        }

        public Criteria andLrIdNotBetween(Integer value1, Integer value2) {
            addCriterion("lr_id not between", value1, value2, "lrId");
            return (Criteria) this;
        }

        public Criteria andLrNameIsNull() {
            addCriterion("lr_name is null");
            return (Criteria) this;
        }

        public Criteria andLrNameIsNotNull() {
            addCriterion("lr_name is not null");
            return (Criteria) this;
        }

        public Criteria andLrNameEqualTo(String value) {
            addCriterion("lr_name =", value, "lrName");
            return (Criteria) this;
        }

        public Criteria andLrNameNotEqualTo(String value) {
            addCriterion("lr_name <>", value, "lrName");
            return (Criteria) this;
        }

        public Criteria andLrNameGreaterThan(String value) {
            addCriterion("lr_name >", value, "lrName");
            return (Criteria) this;
        }

        public Criteria andLrNameGreaterThanOrEqualTo(String value) {
            addCriterion("lr_name >=", value, "lrName");
            return (Criteria) this;
        }

        public Criteria andLrNameLessThan(String value) {
            addCriterion("lr_name <", value, "lrName");
            return (Criteria) this;
        }

        public Criteria andLrNameLessThanOrEqualTo(String value) {
            addCriterion("lr_name <=", value, "lrName");
            return (Criteria) this;
        }

        public Criteria andLrNameLike(String value) {
            addCriterion("lr_name like", value, "lrName");
            return (Criteria) this;
        }

        public Criteria andLrNameNotLike(String value) {
            addCriterion("lr_name not like", value, "lrName");
            return (Criteria) this;
        }

        public Criteria andLrNameIn(List<String> values) {
            addCriterion("lr_name in", values, "lrName");
            return (Criteria) this;
        }

        public Criteria andLrNameNotIn(List<String> values) {
            addCriterion("lr_name not in", values, "lrName");
            return (Criteria) this;
        }

        public Criteria andLrNameBetween(String value1, String value2) {
            addCriterion("lr_name between", value1, value2, "lrName");
            return (Criteria) this;
        }

        public Criteria andLrNameNotBetween(String value1, String value2) {
            addCriterion("lr_name not between", value1, value2, "lrName");
            return (Criteria) this;
        }

        public Criteria andLrDateIsNull() {
            addCriterion("lr_date is null");
            return (Criteria) this;
        }

        public Criteria andLrDateIsNotNull() {
            addCriterion("lr_date is not null");
            return (Criteria) this;
        }

        public Criteria andLrDateEqualTo(Date value) {
            addCriterion("lr_date =", value, "lrDate");
            return (Criteria) this;
        }

        public Criteria andLrDateNotEqualTo(Date value) {
            addCriterion("lr_date <>", value, "lrDate");
            return (Criteria) this;
        }

        public Criteria andLrDateGreaterThan(Date value) {
            addCriterion("lr_date >", value, "lrDate");
            return (Criteria) this;
        }

        public Criteria andLrDateGreaterThanOrEqualTo(Date value) {
            addCriterion("lr_date >=", value, "lrDate");
            return (Criteria) this;
        }

        public Criteria andLrDateLessThan(Date value) {
            addCriterion("lr_date <", value, "lrDate");
            return (Criteria) this;
        }

        public Criteria andLrDateLessThanOrEqualTo(Date value) {
            addCriterion("lr_date <=", value, "lrDate");
            return (Criteria) this;
        }

        public Criteria andLrDateIn(List<Date> values) {
            addCriterion("lr_date in", values, "lrDate");
            return (Criteria) this;
        }

        public Criteria andLrDateNotIn(List<Date> values) {
            addCriterion("lr_date not in", values, "lrDate");
            return (Criteria) this;
        }

        public Criteria andLrDateBetween(Date value1, Date value2) {
            addCriterion("lr_date between", value1, value2, "lrDate");
            return (Criteria) this;
        }

        public Criteria andLrDateNotBetween(Date value1, Date value2) {
            addCriterion("lr_date not between", value1, value2, "lrDate");
            return (Criteria) this;
        }

        public Criteria andLrContentIsNull() {
            addCriterion("lr_content is null");
            return (Criteria) this;
        }

        public Criteria andLrContentIsNotNull() {
            addCriterion("lr_content is not null");
            return (Criteria) this;
        }

        public Criteria andLrContentEqualTo(String value) {
            addCriterion("lr_content =", value, "lrContent");
            return (Criteria) this;
        }

        public Criteria andLrContentNotEqualTo(String value) {
            addCriterion("lr_content <>", value, "lrContent");
            return (Criteria) this;
        }

        public Criteria andLrContentGreaterThan(String value) {
            addCriterion("lr_content >", value, "lrContent");
            return (Criteria) this;
        }

        public Criteria andLrContentGreaterThanOrEqualTo(String value) {
            addCriterion("lr_content >=", value, "lrContent");
            return (Criteria) this;
        }

        public Criteria andLrContentLessThan(String value) {
            addCriterion("lr_content <", value, "lrContent");
            return (Criteria) this;
        }

        public Criteria andLrContentLessThanOrEqualTo(String value) {
            addCriterion("lr_content <=", value, "lrContent");
            return (Criteria) this;
        }

        public Criteria andLrContentLike(String value) {
            addCriterion("lr_content like", value, "lrContent");
            return (Criteria) this;
        }

        public Criteria andLrContentNotLike(String value) {
            addCriterion("lr_content not like", value, "lrContent");
            return (Criteria) this;
        }

        public Criteria andLrContentIn(List<String> values) {
            addCriterion("lr_content in", values, "lrContent");
            return (Criteria) this;
        }

        public Criteria andLrContentNotIn(List<String> values) {
            addCriterion("lr_content not in", values, "lrContent");
            return (Criteria) this;
        }

        public Criteria andLrContentBetween(String value1, String value2) {
            addCriterion("lr_content between", value1, value2, "lrContent");
            return (Criteria) this;
        }

        public Criteria andLrContentNotBetween(String value1, String value2) {
            addCriterion("lr_content not between", value1, value2, "lrContent");
            return (Criteria) this;
        }

        public Criteria andLrForWordIsNull() {
            addCriterion("lr_for_word is null");
            return (Criteria) this;
        }

        public Criteria andLrForWordIsNotNull() {
            addCriterion("lr_for_word is not null");
            return (Criteria) this;
        }

        public Criteria andLrForWordEqualTo(String value) {
            addCriterion("lr_for_word =", value, "lrForWord");
            return (Criteria) this;
        }

        public Criteria andLrForWordNotEqualTo(String value) {
            addCriterion("lr_for_word <>", value, "lrForWord");
            return (Criteria) this;
        }

        public Criteria andLrForWordGreaterThan(String value) {
            addCriterion("lr_for_word >", value, "lrForWord");
            return (Criteria) this;
        }

        public Criteria andLrForWordGreaterThanOrEqualTo(String value) {
            addCriterion("lr_for_word >=", value, "lrForWord");
            return (Criteria) this;
        }

        public Criteria andLrForWordLessThan(String value) {
            addCriterion("lr_for_word <", value, "lrForWord");
            return (Criteria) this;
        }

        public Criteria andLrForWordLessThanOrEqualTo(String value) {
            addCriterion("lr_for_word <=", value, "lrForWord");
            return (Criteria) this;
        }

        public Criteria andLrForWordLike(String value) {
            addCriterion("lr_for_word like", value, "lrForWord");
            return (Criteria) this;
        }

        public Criteria andLrForWordNotLike(String value) {
            addCriterion("lr_for_word not like", value, "lrForWord");
            return (Criteria) this;
        }

        public Criteria andLrForWordIn(List<String> values) {
            addCriterion("lr_for_word in", values, "lrForWord");
            return (Criteria) this;
        }

        public Criteria andLrForWordNotIn(List<String> values) {
            addCriterion("lr_for_word not in", values, "lrForWord");
            return (Criteria) this;
        }

        public Criteria andLrForWordBetween(String value1, String value2) {
            addCriterion("lr_for_word between", value1, value2, "lrForWord");
            return (Criteria) this;
        }

        public Criteria andLrForWordNotBetween(String value1, String value2) {
            addCriterion("lr_for_word not between", value1, value2, "lrForWord");
            return (Criteria) this;
        }
    }

    /**
     * 类注释
     * Criteria
     * 数据库表：reply
     */
    public static class Criteria extends GeneratedCriteria {


        protected Criteria() {
            super();
        }
    }

    /**
     * 
     * Criterion
     * 数据库表：reply
     */
    public static class Criterion {

        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}