<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zdb.demo.mapper.CommentMapper">
    <resultMap id="BaseResultMap" type="com.zdb.demo.entity.Comment">
        <!--
        @mbggenerated
        -->
        <id column="comment_id" jdbcType="INTEGER" property="commentId" />
        <result column="answer_id" jdbcType="INTEGER" property="answerId" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="prase_count" jdbcType="INTEGER" property="praseCount" />
        <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.zdb.demo.entity.Comment">
        <!--
        @mbggenerated
        -->
        <result column="content" jdbcType="LONGVARCHAR" property="content" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
        @mbggenerated
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
        @mbggenerated
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
        @mbggenerated
        -->
        comment_id, answer_id, user_id, prase_count, createTime
    </sql>
    <sql id="Blob_Column_List">
        <!--
        @mbggenerated
        -->
        content
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.zdb.demo.entity.CommentExample" resultMap="ResultMapWithBLOBs">
        <!--
        @mbggenerated
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.zdb.demo.entity.CommentExample" resultMap="BaseResultMap">
        <!--
        @mbggenerated
        -->
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0">
            limit #{limitStart} , #{limitEnd}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        <!--
        @mbggenerated
        -->
        select 
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from comment
        where comment_id = #{commentId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
        @mbggenerated
        -->
        delete from comment
        where comment_id = #{commentId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.zdb.demo.entity.CommentExample">
        <!--
        @mbggenerated
        -->
        delete from comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.zdb.demo.entity.Comment">
        <!--
        @mbggenerated
        -->
        insert into comment (comment_id, answer_id, user_id, 
            prase_count, createTime, content
            )
        values (#{commentId,jdbcType=INTEGER}, #{answerId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
            #{praseCount,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
            )
    </insert>
    <insert id="insertSelective" parameterType="com.zdb.demo.entity.Comment">
        <!--
        @mbggenerated
        -->
        insert into comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                comment_id,
            </if>
            <if test="answerId != null">
                answer_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="praseCount != null">
                prase_count,
            </if>
            <if test="createtime != null">
                createTime,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                #{commentId,jdbcType=INTEGER},
            </if>
            <if test="answerId != null">
                #{answerId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="praseCount != null">
                #{praseCount,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zdb.demo.entity.CommentExample" resultType="java.lang.Integer">
        <!--
        @mbggenerated
        -->
        select count(*) from comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
        @mbggenerated
        -->
        update comment
        <set>
            <if test="record.commentId != null">
                comment_id = #{record.commentId,jdbcType=INTEGER},
            </if>
            <if test="record.answerId != null">
                answer_id = #{record.answerId,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.praseCount != null">
                prase_count = #{record.praseCount,jdbcType=INTEGER},
            </if>
            <if test="record.createtime != null">
                createTime = #{record.createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        <!--
        @mbggenerated
        -->
        update comment
        set comment_id = #{record.commentId,jdbcType=INTEGER},
            answer_id = #{record.answerId,jdbcType=INTEGER},
            user_id = #{record.userId,jdbcType=INTEGER},
            prase_count = #{record.praseCount,jdbcType=INTEGER},
            createTime = #{record.createtime,jdbcType=TIMESTAMP},
            content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
        @mbggenerated
        -->
        update comment
        set comment_id = #{record.commentId,jdbcType=INTEGER},
            answer_id = #{record.answerId,jdbcType=INTEGER},
            user_id = #{record.userId,jdbcType=INTEGER},
            prase_count = #{record.praseCount,jdbcType=INTEGER},
            createTime = #{record.createtime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zdb.demo.entity.Comment">
        <!--
        @mbggenerated
        -->
        update comment
        <set>
            <if test="answerId != null">
                answer_id = #{answerId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="praseCount != null">
                prase_count = #{praseCount,jdbcType=INTEGER},
            </if>
            <if test="createtime != null">
                createTime = #{createtime,jdbcType=TIMESTAMP},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where comment_id = #{commentId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zdb.demo.entity.Comment">
        <!--
        @mbggenerated
        -->
        update comment
        set answer_id = #{answerId,jdbcType=INTEGER},
            user_id = #{userId,jdbcType=INTEGER},
            prase_count = #{praseCount,jdbcType=INTEGER},
            createTime = #{createtime,jdbcType=TIMESTAMP},
            content = #{content,jdbcType=LONGVARCHAR}
        where comment_id = #{commentId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zdb.demo.entity.Comment">
        <!--
        @mbggenerated
        -->
        update comment
        set answer_id = #{answerId,jdbcType=INTEGER},
            user_id = #{userId,jdbcType=INTEGER},
            prase_count = #{praseCount,jdbcType=INTEGER},
            createTime = #{createtime,jdbcType=TIMESTAMP}
        where comment_id = #{commentId,jdbcType=INTEGER}
    </update>
</mapper>